---
interface Props {
  title: string;
  description: string;
  href?: string;
  image?: string;
}

const { title, description, href, image } = Astro.props;
const base = import.meta.env.BASE_URL || '/';
const normalizeBase = base === '/' ? '' : base.replace(/\/$/, '');
const withBase = (path: string) =>
  path && path.startsWith('/') ? `${normalizeBase}${path}` : path;
---
<article class="project-card">
  {image && (
    <div class="image-wrapper">
      <img src={image} alt="" loading="lazy" />
    </div>
  )}
  <div class="content">
    <h3>{href ? <a href={withBase(href)}>{title}</a> : title}</h3>
    <p>{description}</p>
  </div>
</article>

<style>
  .project-card {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: 1.5rem;
    display: grid;
    gap: 1rem;
    box-shadow: var(--shadow-soft);
    transition: border-color var(--transition), transform var(--transition);
  }

  .project-card:hover,
  .project-card:focus-within {
    border-color: rgba(76, 183, 181, 0.35);
    transform: translateY(-3px);
  }

  .image-wrapper {
    border-radius: var(--radius-md);
    overflow: hidden;
    border: 1px solid var(--color-border);
  }

  img {
    display: block;
    width: 100%;
    height: auto;
  }

  h3 {
    margin: 0 0 0.35rem;
    font-family: var(--font-serif);
    font-size: 1.25rem;
  }

  h3 a {
    color: var(--color-text);
  }

  .content {
    display: grid;
    gap: 0.6rem;
  }

  p {
    margin: 0;
    color: var(--color-text-muted);
  }
</style>

---
import type { CollectionEntry } from 'astro:content';

interface Props {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;
const base = import.meta.env.BASE_URL || '/';
const normalizeBase = base === '/' ? '' : base.replace(/\/$/, '');
const withBase = (path: string) => (path.startsWith('/') ? `${normalizeBase}${path}` : path);
const { data } = project;
const projectUrl = withBase(`/projects/${project.slug}/`);
const imageUrl = data.image ? withBase(data.image) : null;
---
<article class="project-card">
  {imageUrl && (
    <div class="image-wrapper">
      <img src={imageUrl} alt="" loading="lazy" />
    </div>
  )}
  <div class="content">
    <h3><a href={projectUrl}>{data.title}</a></h3>
    <p>{data.description}</p>
    <p class="status">Status: <span>{data.status}</span></p>
  </div>
</article>

<style>
  .project-card {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: 1.5rem;
    display: grid;
    gap: 1rem;
    box-shadow: var(--shadow-soft);
    transition: border-color var(--transition), transform var(--transition);
  }

  .project-card:hover,
  .project-card:focus-within {
    border-color: rgba(76, 183, 181, 0.35);
    transform: translateY(-3px);
  }

  .image-wrapper {
    border-radius: var(--radius-md);
    overflow: hidden;
    border: 1px solid var(--color-border);
  }

  img {
    display: block;
    width: 100%;
    height: auto;
  }

  h3 {
    margin: 0;
    font-family: var(--font-serif);
    font-size: 1.25rem;
  }

  h3 a {
    color: var(--color-text);
  }

  .content {
    display: grid;
    gap: 0.6rem;
  }

  p {
    margin: 0;
    color: var(--color-text-muted);
  }

  .status span {
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.08em;
    font-size: 0.8rem;
  }
</style>

---
import type { CollectionEntry } from 'astro:content';

interface Props {
  notes: CollectionEntry<'posts'>[];
  showLanguage?: boolean;
}

const { notes, showLanguage = false } = Astro.props;
---
<ul class="note-list">
  {notes.map((note) => {
    const language = (note.data.language ?? 'en').toUpperCase();
    const displayDate = note.data.pubDate.toLocaleDateString('en-GB', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
    });
    return (
      <li>
        <a href={`/blog/${note.slug}/`}>
          <span class="note-title">{note.data.title}</span>
          <span class="note-meta">
            <time dateTime={note.data.pubDate.toISOString()}>{displayDate}</time>
            {showLanguage && <span class="note-language">{language}</span>}
          </span>
        </a>
      </li>
    );
  })}
</ul>

<style>
  .note-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    gap: 1rem;
  }

  li {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    transition: border-color var(--transition), transform var(--transition);
  }

  a {
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
    padding: 1.1rem 1.3rem;
    color: inherit;
  }

  li:hover,
  li:focus-within {
    border-color: rgba(76, 183, 181, 0.35);
    transform: translateY(-2px);
  }

  .note-title {
    font-family: var(--font-serif);
    font-size: 1.15rem;
  }

  .note-meta {
    display: flex;
    gap: 0.6rem;
    align-items: baseline;
    font-size: 0.85rem;
    color: var(--color-text-muted);
    letter-spacing: 0.04em;
    text-transform: uppercase;
  }

  time {
    font-variant-numeric: tabular-nums;
  }

  .note-language {
    background: rgba(76, 183, 181, 0.16);
    color: var(--color-accent);
    padding: 0.1rem 0.45rem;
    border-radius: 999px;
    font-size: 0.75rem;
    letter-spacing: 0.08em;
  }

  @media (max-width: 520px) {
    .note-title {
      font-size: 1.05rem;
    }
  }
</style>

---
import { getCollection } from 'astro:content';
import PersonalLayout from '../layouts/PersonalLayout.astro';
import ProjectCard from '../components/ProjectCard.astro';

// Add new markdown entries in src/content/notes and src/content/projects to populate the sections below.
const allNotes = (await getCollection('notes')).sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime(),
);
const latestNotes = allNotes.slice(0, 3);

const allProjects = (await getCollection('projects')).sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime(),
);
const latestProjects = allProjects.slice(0, 3);

const base = import.meta.env.BASE_URL || '/';
const normalizeBase = base === '/' ? '' : base.replace(/\/$/, '');
const withBase = (path: string) => (path.startsWith('/') ? `${normalizeBase}${path}` : path);
const resolveImage = (path?: string) => {
  if (!path) return undefined;
  if (/^https?:\/\//i.test(path)) return path;
  return withBase(path);
};
---
<PersonalLayout title="Alberto Ferreira de Melo" description="Thoughts, experiments, and notes on technology and life.">
  <section class="intro card">
    <h2>Hej, Iâ€™m Alberto.</h2>
      <p>
      This is my digital notebook, a calm space for the projects, prompts and questions that keep me curious.
    </p>
    <p>
      I keep several threads open at once. <br>
      Some turn into essays, others remain rough edges. <br>
      All of them show the work in progress.
    </p>
  </section>

  <section aria-labelledby="latest-notes" class="stack">
    <div class="section-heading">
      <h2 id="latest-notes">Latest notes</h2>
      <a href={withBase('/notes')} class="section-link">See all notes</a>
    </div>
    {latestNotes.length > 0 ? (
      <ul class="note-list">
        {latestNotes.map((note) => {
          const formattedDate = note.data.pubDate.toLocaleDateString('en-GB', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
          });
          const language = (note.data.lang ?? 'en').toUpperCase();
          const imageUrl = resolveImage(note.data.image);
          return (
            <li class={{ 'note-card': true, 'note-card--with-image': Boolean(imageUrl) }}>
              <a href={withBase(`/notes/${note.slug}/`)} class="note-card__link">
                {imageUrl && (
                  <div class="note-card__media" aria-hidden="true">
                    <img src={imageUrl} alt="" loading="lazy" decoding="async" />
                  </div>
                )}
                <div class="note-card__content">
                  <header>
                    <span class="note-card__date">{formattedDate}</span>
                    <span class="note-card__lang">{language}</span>
                  </header>
                  <h3>{note.data.title}</h3>
                  <p>{note.data.description}</p>
                </div>
              </a>
            </li>
          );
        })}
      </ul>
    ) : (
      <p class="empty">Notes will appear here as soon as I publish the first one.</p>
    )}
    {allNotes.length === 1 && <p class="empty">More notes coming soon.</p>}
  </section>

  <section aria-labelledby="projects" class="stack">
    <div class="section-heading">
      <h2 id="projects">Projects &amp; experiments</h2>
      <p class="section-subtitle">Three fresh snapshots from the workshop table.</p>
    </div>
    {latestProjects.length > 0 ? (
      <div class="project-grid">
        {latestProjects.map((project) => (
          <ProjectCard project={project} />
        ))}
      </div>
    ) : (
      <p class="empty">
        Projects &amp; experiments will appear here as I publish them.
      </p>
    )}
  </section>
</PersonalLayout>

<style>
  .intro h2 {
    margin: 0 0 0.75rem;
    font-family: var(--font-serif);
    font-size: clamp(1.8rem, 3vw + 1rem, 2.4rem);
  }

  .intro p {
    color: var(--color-text-muted);
    max-width: 50ch;
  }

  .stack {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .section-heading {
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
  }

  .section-heading h2 {
    margin: 0;
    font-family: var(--font-serif);
    font-size: 1.6rem;
  }

  .section-link {
    align-self: flex-start;
    font-size: 0.9rem;
    letter-spacing: 0.04em;
  }

  .section-subtitle {
    margin: 0;
    color: var(--color-text-muted);
    font-size: 0.95rem;
  }

  .note-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    gap: 1.25rem;
  }

  .note-card {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    transition: border-color var(--transition), transform var(--transition);
  }

  .note-card__link {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1.2rem 1.35rem;
    color: inherit;
  }

  .note-card--with-image .note-card__link {
    flex-direction: column;
  }

  .note-card__media {
    position: relative;
    overflow: hidden;
    border-radius: 0.75rem;
    width: min(100%, 200px);
    max-width: 220px;
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.35);
  }

  .note-card__media img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .note-card__content {
    display: grid;
    gap: 0.65rem;
  }

  .note-card__content header {
    display: flex;
    justify-content: space-between;
    gap: 0.75rem;
    font-size: 0.82rem;
    letter-spacing: 0.06em;
    text-transform: uppercase;
    color: var(--color-text-muted);
  }

  .note-card__lang {
    background: rgba(76, 183, 181, 0.12);
    color: var(--color-accent);
    padding: 0.1rem 0.55rem;
    border-radius: 999px;
  }

  .note-card__content h3 {
    margin: 0;
    font-family: var(--font-serif);
    font-size: 1.2rem;
  }

  .note-card__content p {
    margin: 0;
    color: var(--color-text-muted);
  }

  .note-card:hover,
  .note-card:focus-within {
    border-color: rgba(76, 183, 181, 0.35);
    transform: translateY(-2px);
  }

  @media (min-width: 640px) {
    .note-card__link {
      flex-direction: row;
      align-items: center;
    }

    .note-card--with-image .note-card__link {
      flex-direction: row;
      align-items: stretch;
    }

    .note-card__media {
      flex: 0 0 180px;
      max-width: 180px;
      width: 180px;
      height: 120px;
    }
  }

  .project-grid {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
  }

  .empty {
    margin: 0;
    color: var(--color-text-muted);
    font-style: italic;
  }
</style>
